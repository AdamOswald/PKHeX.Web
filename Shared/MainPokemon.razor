@using PKHeX.Core;
@inject Services.PokemonEditorService PokemonEditorService
@inject Services.SpriteService SpriteService
@inject Services.SaveFileService SaveFileService

@{
  var pokemon = PokemonEditorService.Pokemon;
  var saveFile = SaveFileService.SaveFile;
}

@if (pokemon != null)
{
  <div style="border: 1px solid black;
  position: relative;
  width: 68px;
  height: 56px;">
  <PokemonWithItem Pokemon="pokemon" />
</div>

  <MudTextField @bind-Value="pokemon.Nickname" Label="Nickname" Variant="Variant.Text" MaxLength="saveFile.NickLength"
  Counter="saveFile.NickLength" />

  <MudAutocomplete Margin="Margin.Dense" Dense="true" T="int" @bind-Value="pokemon.Species" SearchFunc="@Search"
  ToStringFunc="@(e=> Util.GetSpeciesList("en")[e])" MaxItems="null" />
}

@code {
  protected override void OnInitialized()
  {
    PokemonEditorService.OnChange += StateHasChanged;
  }

  private async Task<IEnumerable<int>> Search(string value)
  {
    var species = Util.GetSpeciesList("en").Skip(1).Take(SaveFileService.SaveFile.MaxSpeciesID).Select((name, index) => new
    {
      Name = name,
      Index = index + 1
    }).Where(x => x.Name.Contains(value,
    StringComparison.InvariantCultureIgnoreCase)).OrderBy(x => x.Name).Select(x => x.Index);
    return species;
  }
}