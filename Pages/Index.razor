@using System.IO
@inject Services.SaveFileService SaveFileService
@inject Services.PokemonEditorService PokemonEditorService
@inject IJSRuntime JS
@page "/"

<PageTitle>Index</PageTitle>

@if (SaveFileService.SaveFile == null)
{
  <h1>Please upload a save file.</h1>
}
else
{
  <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.Large">
  <MudGrid Justify="Justify.Center">
    <MudItem xs="12" sm="5">
      <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="Main">
          <MainPokemon />
        </MudTabPanel>
        <MudTabPanel Text="Met">
          <MudText>Content Two</MudText>
        </MudTabPanel>
        <MudTabPanel Text="Stats">
          <MudText>Content Three</MudText>
        </MudTabPanel>
        @* <MudTabPanel Text="Attack">
          <MudText>Content Disabled</MudText>
          </MudTabPanel>
          <MudTabPanel Text="OT/Misc">
          <MudText>Content Disabled</MudText>
          </MudTabPanel> *@
      </MudTabs>
    </MudItem>
    <MudIconButton @onclick="(e => PokemonEditorService.IsSetLeft = !PokemonEditorService.IsSetLeft)"
      Icon="@(PokemonEditorService.IsSetLeft ? Icons.Material.Filled.ArrowBack : Icons.Material.Filled.ArrowForward)"
      Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" Class="ma-2" />
    <MudItem xs="12" sm="6">
      <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="Box">
          <Box />
        </MudTabPanel>
        <MudTabPanel Text="Party">
          <Party />
        </MudTabPanel>
        <MudTabPanel Text="Other">
          <MudText>Content Three</MudText>
        </MudTabPanel>
        <MudTabPanel Text="SAV">
          <MudText>Content Disabled</MudText>
        </MudTabPanel>
      </MudTabs>
    </MudItem>
  </MudGrid>
</MudContainer>
  <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.CloudUpload" class="mx-auto"
  @onclick="DownloadFileFromStream">
    Download save file
  </MudButton>
}

@code {
  protected override void OnInitialized()
  {
    SaveFileService.OnChange += StateHasChanged;
  }

  private async Task DownloadFileFromStream()
  {
    var saveFile = SaveFileService.SaveFile;
    var extension = saveFile.Metadata.GetSuggestedExtension();
    var flags = saveFile.Metadata.GetSuggestedFlags(extension);

    var fileStream = new MemoryStream(saveFile.Write(flags));
    var fileName = saveFile.Metadata.BAKName.Replace(".bak", extension).Remove(0, 1);

    using var streamRef = new DotNetStreamReference(stream: fileStream);

    await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
  }
}
